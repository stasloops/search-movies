[{"D:\\search-movies\\search-movies\\src\\index.js":"1","D:\\search-movies\\search-movies\\src\\reportWebVitals.js":"2","D:\\search-movies\\search-movies\\src\\App.js":"3","D:\\search-movies\\search-movies\\src\\Components\\Films\\Films.jsx":"4","D:\\search-movies\\search-movies\\src\\Components\\Header\\Header.jsx":"5","D:\\search-movies\\search-movies\\src\\Components\\FilmsLook\\FilmsLook.jsx":"6","D:\\search-movies\\search-movies\\src\\Components\\Films\\FilmsItem\\FilmsItem.jsx":"7"},{"size":500,"mtime":1629576990910,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1629576990910,"results":"10","hashOfConfig":"9"},{"size":1145,"mtime":1638920011162,"results":"11","hashOfConfig":"9"},{"size":3392,"mtime":1638920435704,"results":"12","hashOfConfig":"9"},{"size":2608,"mtime":1638920621152,"results":"13","hashOfConfig":"9"},{"size":3434,"mtime":1637674116502,"results":"14","hashOfConfig":"9"},{"size":1426,"mtime":1637674554432,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"tvleoa",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"D:\\search-movies\\search-movies\\src\\index.js",[],["33","34"],"D:\\search-movies\\search-movies\\src\\reportWebVitals.js",[],"D:\\search-movies\\search-movies\\src\\App.js",[],"D:\\search-movies\\search-movies\\src\\Components\\Films\\Films.jsx",["35"],"import React, {useState, useEffect} from 'react'\r\nimport \"./Films.css\"\r\nimport FilmsItem from './FilmsItem/FilmsItem'\r\nimport axios from 'axios'\r\n\r\nfunction Films({setItemid, getValue, getSearch}) {\r\n  const getValues = getValue\r\n  const getSearchs = getSearch\r\n  const setItemsid = setItemid\r\n\r\n    const [loadin, setLoadin] = useState(true);\r\n    const [currentPage, setCurrentPag] = useState(1);\r\n    const [movi, setMovie] = useState([]);\r\n    const [fetchin, setFetchin] = useState(true);\r\n   \r\n    // const KP = 'https://api.kinopoisk.cloud/movies/all/page/all/token/fabe3452e26d0b828b9f06da70484a58'\r\n    // const IMDb = 'https://imdb-api.com/en/API/Top250TVs/k_u9dee0qe'\r\n    // const TMDb = 'https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=${KEY}&total_pages=${itemPerPage}&language=ru'\r\n\r\n    // const [item, setItem] = useState([])\r\n    // const [loading, setLoading] = useState(false)\r\n    // const [currentPage, setCurrentPage] = useState(1)\r\n    // const [itemPerPage] = useState(30)\r\n\r\n    const KEY = 'c2918c64f136a280f575ff886f86f99e'\r\n\r\n    useEffect(() => { \r\n      if (fetchin) {\r\n        axios\r\n          .get(\r\n            `https://api.themoviedb.org/3/movie/popular?api_key=${KEY}&page=${currentPage}&language=ru`,\r\n          )\r\n          .then((res) => {\r\n            setLoadin(false);\r\n            setMovie([...movi, ...res.data.results])\r\n            setCurrentPag((prevState) => prevState + 1); \r\n          })\r\n          .finally(() => setFetchin(false));\r\n      }\r\n      setItemsid(movi)\r\n    }, [fetchin]);\r\n    \r\n\r\n  const scrollHandler = (e) => {\r\n    if (\r\n      e.target.documentElement.scrollHeight -\r\n        (e.target.documentElement.scrollTop + window.innerHeight) <\r\n      2000\r\n    ) {\r\n      setFetchin(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('scroll', scrollHandler);\r\n    return function () {\r\n      document.removeEventListener('scroll', scrollHandler);\r\n    };\r\n  }, []);\r\n\r\n  \r\n\r\n    // useEffect(() => {\r\n    //     const getItems = async () =>{\r\n    //         setLoading(true)\r\n    //         const response = await axios.get(`${IMDb}`)\r\n    //         console.log(response.data);\r\n    //         setItem(response.data.items)\r\n    //         setLoading(false)\r\n           \r\n    //     }\r\n\r\n    //     getItems()\r\n    // },[])\r\n\r\n    \r\n   \r\n    // const lastItemIndex = currentPage * itemPerPage\r\n    // const firstItemIndex = lastItemIndex - itemPerPage\r\n    // const currentItem = item.slice(firstItemIndex, lastItemIndex )\r\n\r\n    // const paginate = pageNumber => setCurrentPage(pageNumber)\r\n    return (\r\n        <main className=\"films\">\r\n            <div className=\"films__inner\">\r\n            {\r\n            loadin === true ? \r\n                <h1>Загрузка</h1>\r\n               :\r\n            getValues ? \r\n                getSearchs.map((item, id) => (\r\n                  <FilmsItem item={item} key={id}/>\r\n                  ))\r\n                :\r\n                movi.map((item, id) => (\r\n                  <FilmsItem item={item} key={id}/>\r\n                  ))\r\n            }\r\n                {/* <Pagination\r\n                 itemPerPage={itemPerPage}\r\n                 totalItems={item.length}\r\n                 paginate={paginate}\r\n                 /> */}\r\n            </div>\r\n        </main>\r\n               \r\n               \r\n    )\r\n}\r\n\r\nexport default Films\r\n","D:\\search-movies\\search-movies\\src\\Components\\Header\\Header.jsx",["36","37","38"],"import React, {useState, useEffect} from 'react'\r\nimport './Header.css'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nfunction Header({setGetValue, setGetSearch}) {\r\n    const setGetValues = setGetValue\r\n    const setGetSearchs = setGetSearch\r\n    const navigate = useNavigate()\r\n    const KEY = 'c2918c64f136a280f575ff886f86f99e'\r\n\r\n    const [search, setSearch] = useState([]);\r\n    const [value, setValue] = useState('')\r\n   \r\n    useEffect(() => {\r\n        if (value) {\r\n          axios\r\n            .get(\r\n              `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${value}&language=ru`,\r\n            )\r\n            .then((res) => {\r\n              setSearch(res.data.results)\r\n            })\r\n        }\r\n      }, [value]);\r\n  \r\n      const submitValue = () => {\r\n        setGetValues(value)\r\n        setGetSearchs(search)\r\n        navigate('/')\r\n        setValue('')\r\n    }\r\n    return (\r\n    \r\n        <header className=\"header\">\r\n        <div className=\"header_inner\">\r\n        <Link to='/'>\r\n            <div className=\"logo\">animeserials</div>\r\n        </Link>\r\n            <div className=\"menubtn\">\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n\r\n            </div>\r\n            <div className=\"back\">\r\n                <div className=\"x\"></div>\r\n\r\n            </div>\r\n            \r\n            <div className=\"header_menu\">\r\n                <div className=\"form\">\r\n                    <input placeholder=\"Найдите фильм\"\r\n                           type=\"text\" \r\n                           className=\"input\"\r\n                           value={value}\r\n                           onChange={(e) => setValue(e.target.value)}\r\n                                                     />\r\n                    <button className=\"submit-value\" onClick={submitValue}>ПОИСК</button>\r\n                </div>\r\n                <nav className=\"nav\">\r\n                    <ul className=\"nav_list\">\r\n                    <li className=\"margin\">\r\n                        <a href=\"\" className=\"nav_link\">ФИЛЬМЫ</a>\r\n                    </li>\r\n                    <li className=\"margin\">\r\n                        <a href=\"\" className=\"nav_link\">МУЛЬТСЕРИАЛЫ</a>\r\n                    </li>\r\n\r\n                    <li className=\"margin\">\r\n                        <a href=\"\" className=\"nav_link\">АНИМЕ</a>\r\n                    </li>\r\n                    </ul>\r\n                </nav>  \r\n            </div>\r\n        </div>\r\n    </header>\r\n    \r\n\r\n   )\r\n}\r\n\r\nexport default Header;\r\n","D:\\search-movies\\search-movies\\src\\Components\\FilmsLook\\FilmsLook.jsx",[],"D:\\search-movies\\search-movies\\src\\Components\\Films\\FilmsItem\\FilmsItem.jsx",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":41,"column":8,"nodeType":"45","endLine":41,"endColumn":17,"suggestions":"46"},{"ruleId":"47","severity":1,"message":"48","line":64,"column":25,"nodeType":"49","endLine":64,"endColumn":57},{"ruleId":"47","severity":1,"message":"48","line":67,"column":25,"nodeType":"49","endLine":67,"endColumn":57},{"ruleId":"47","severity":1,"message":"48","line":71,"column":25,"nodeType":"49","endLine":71,"endColumn":57},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentPage', 'movi', and 'setItemsid'. Either include them or remove the dependency array. You can also do a functional update 'setMovie(m => ...)' if you only need 'movi' in the 'setMovie' call.","ArrayExpression",["52"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"53","fix":"54"},"Update the dependencies array to be: [currentPage, fetchin, movi, setItemsid]",{"range":"55","text":"56"},[1552,1561],"[currentPage, fetchin, movi, setItemsid]"]