{"ast":null,"code":"import _toConsumableArray from\"D:/search-movies/search-movies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"D:/search-movies/search-movies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import\"./Films.css\";import FilmsItem from'./FilmsItem/FilmsItem';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";function Films(_ref){var setItemid=_ref.setItemid,getValue=_ref.getValue,getSearch=_ref.getSearch;var getValues=getValue;var getSearchs=getSearch;var setItemsid=setItemid;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),loadin=_useState2[0],setLoadin=_useState2[1];var _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),currentPage=_useState4[0],setCurrentPag=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),movi=_useState6[0],setMovie=_useState6[1];var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),fetchin=_useState8[0],setFetchin=_useState8[1];// const KP = 'https://api.kinopoisk.cloud/movies/all/page/all/token/fabe3452e26d0b828b9f06da70484a58'\n// const IMDb = 'https://imdb-api.com/en/API/Top250TVs/k_u9dee0qe'\n// const TMDb = 'https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=${KEY}&total_pages=${itemPerPage}&language=ru'\n// const [item, setItem] = useState([])\n// const [loading, setLoading] = useState(false)\n// const [currentPage, setCurrentPage] = useState(1)\n// const [itemPerPage] = useState(30)\nvar KEY='c2918c64f136a280f575ff886f86f99e';useEffect(function(){if(fetchin){axios.get(\"https://api.themoviedb.org/3/movie/popular?api_key=\".concat(KEY,\"&page=\").concat(currentPage,\"&language=ru\")).then(function(res){setLoadin(false);setMovie([].concat(_toConsumableArray(movi),_toConsumableArray(res.data.results)));setCurrentPag(function(prevState){return prevState+1;});}).finally(function(){return setFetchin(false);});}setItemsid(movi);},[fetchin]);var scrollHandler=function scrollHandler(e){if(e.target.documentElement.scrollHeight-(e.target.documentElement.scrollTop+window.innerHeight)<2000){setFetchin(true);}};useEffect(function(){document.addEventListener('scroll',scrollHandler);return function(){document.removeEventListener('scroll',scrollHandler);};},[]);// useEffect(() => {\n//     const getItems = async () =>{\n//         setLoading(true)\n//         const response = await axios.get(`${IMDb}`)\n//         console.log(response.data);\n//         setItem(response.data.items)\n//         setLoading(false)\n//     }\n//     getItems()\n// },[])\n// const lastItemIndex = currentPage * itemPerPage\n// const firstItemIndex = lastItemIndex - itemPerPage\n// const currentItem = item.slice(firstItemIndex, lastItemIndex )\n// const paginate = pageNumber => setCurrentPage(pageNumber)\nreturn/*#__PURE__*/_jsx(\"main\",{className:\"films\",children:/*#__PURE__*/_jsx(\"div\",{className:\"films__inner\",children:loadin===true?/*#__PURE__*/_jsx(\"h1\",{children:\"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430\"}):getValues?getSearchs.map(function(item,id){return/*#__PURE__*/_jsx(FilmsItem,{item:item},id);}):movi.map(function(item,id){return/*#__PURE__*/_jsx(FilmsItem,{item:item},id);})})});}export default Films;","map":{"version":3,"sources":["D:/search-movies/search-movies/src/Components/Films/Films.jsx"],"names":["React","useState","useEffect","FilmsItem","axios","Films","setItemid","getValue","getSearch","getValues","getSearchs","setItemsid","loadin","setLoadin","currentPage","setCurrentPag","movi","setMovie","fetchin","setFetchin","KEY","get","then","res","data","results","prevState","finally","scrollHandler","e","target","documentElement","scrollHeight","scrollTop","window","innerHeight","document","addEventListener","removeEventListener","map","item","id"],"mappings":"kTAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,MAAO,aAAP,CACA,MAAOC,CAAAA,SAAP,KAAsB,uBAAtB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,2CAEA,QAASC,CAAAA,KAAT,MAAiD,IAAjCC,CAAAA,SAAiC,MAAjCA,SAAiC,CAAtBC,QAAsB,MAAtBA,QAAsB,CAAZC,SAAY,MAAZA,SAAY,CAC/C,GAAMC,CAAAA,SAAS,CAAGF,QAAlB,CACA,GAAMG,CAAAA,UAAU,CAAGF,SAAnB,CACA,GAAMG,CAAAA,UAAU,CAAGL,SAAnB,CAH+C,cAKjBL,QAAQ,CAAC,IAAD,CALS,wCAKtCW,MALsC,eAK9BC,SAL8B,8BAMRZ,QAAQ,CAAC,CAAD,CANA,yCAMtCa,WANsC,eAMzBC,aANyB,8BAOpBd,QAAQ,CAAC,EAAD,CAPY,yCAOtCe,IAPsC,eAOhCC,QAPgC,8BAQfhB,QAAQ,CAAC,IAAD,CARO,yCAQtCiB,OARsC,eAQ7BC,UAR6B,eAU7C;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,GAAMC,CAAAA,GAAG,CAAG,kCAAZ,CAEAlB,SAAS,CAAC,UAAM,CACd,GAAIgB,OAAJ,CAAa,CACXd,KAAK,CACFiB,GADH,8DAE0DD,GAF1D,kBAEsEN,WAFtE,kBAIGQ,IAJH,CAIQ,SAACC,GAAD,CAAS,CACbV,SAAS,CAAC,KAAD,CAAT,CACAI,QAAQ,8BAAKD,IAAL,qBAAcO,GAAG,CAACC,IAAJ,CAASC,OAAvB,GAAR,CACAV,aAAa,CAAC,SAACW,SAAD,QAAeA,CAAAA,SAAS,CAAG,CAA3B,EAAD,CAAb,CACD,CARH,EASGC,OATH,CASW,iBAAMR,CAAAA,UAAU,CAAC,KAAD,CAAhB,EATX,EAUD,CACDR,UAAU,CAACK,IAAD,CAAV,CACD,CAdQ,CAcN,CAACE,OAAD,CAdM,CAAT,CAiBF,GAAMU,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAO,CAC3B,GACEA,CAAC,CAACC,MAAF,CAASC,eAAT,CAAyBC,YAAzB,EACGH,CAAC,CAACC,MAAF,CAASC,eAAT,CAAyBE,SAAzB,CAAqCC,MAAM,CAACC,WAD/C,EAEA,IAHF,CAIE,CACAhB,UAAU,CAAC,IAAD,CAAV,CACD,CACF,CARD,CAUAjB,SAAS,CAAC,UAAM,CACdkC,QAAQ,CAACC,gBAAT,CAA0B,QAA1B,CAAoCT,aAApC,EACA,MAAO,WAAY,CACjBQ,QAAQ,CAACE,mBAAT,CAA6B,QAA7B,CAAuCV,aAAvC,EACD,CAFD,CAGD,CALQ,CAKN,EALM,CAAT,CASE;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAIA;AACA;AACA;AAEA;AACA,mBACI,aAAM,SAAS,CAAC,OAAhB,uBACI,YAAK,SAAS,CAAC,cAAf,UAEAhB,MAAM,GAAK,IAAX,cACI,wEADJ,CAGAH,SAAS,CACLC,UAAU,CAAC6B,GAAX,CAAe,SAACC,IAAD,CAAOC,EAAP,qBACb,KAAC,SAAD,EAAW,IAAI,CAAED,IAAjB,EAA4BC,EAA5B,CADa,EAAf,CADK,CAKLzB,IAAI,CAACuB,GAAL,CAAS,SAACC,IAAD,CAAOC,EAAP,qBACP,KAAC,SAAD,EAAW,IAAI,CAAED,IAAjB,EAA4BC,EAA5B,CADO,EAAT,CAVJ,EADJ,EADJ,CA0BH,CAED,cAAepC,CAAAA,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport \"./Films.css\"\r\nimport FilmsItem from './FilmsItem/FilmsItem'\r\nimport axios from 'axios'\r\n\r\nfunction Films({setItemid, getValue, getSearch}) {\r\n  const getValues = getValue\r\n  const getSearchs = getSearch\r\n  const setItemsid = setItemid\r\n\r\n    const [loadin, setLoadin] = useState(true);\r\n    const [currentPage, setCurrentPag] = useState(1);\r\n    const [movi, setMovie] = useState([]);\r\n    const [fetchin, setFetchin] = useState(true);\r\n   \r\n    // const KP = 'https://api.kinopoisk.cloud/movies/all/page/all/token/fabe3452e26d0b828b9f06da70484a58'\r\n    // const IMDb = 'https://imdb-api.com/en/API/Top250TVs/k_u9dee0qe'\r\n    // const TMDb = 'https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=${KEY}&total_pages=${itemPerPage}&language=ru'\r\n\r\n    // const [item, setItem] = useState([])\r\n    // const [loading, setLoading] = useState(false)\r\n    // const [currentPage, setCurrentPage] = useState(1)\r\n    // const [itemPerPage] = useState(30)\r\n\r\n    const KEY = 'c2918c64f136a280f575ff886f86f99e'\r\n\r\n    useEffect(() => { \r\n      if (fetchin) {\r\n        axios\r\n          .get(\r\n            `https://api.themoviedb.org/3/movie/popular?api_key=${KEY}&page=${currentPage}&language=ru`,\r\n          )\r\n          .then((res) => {\r\n            setLoadin(false);\r\n            setMovie([...movi, ...res.data.results])\r\n            setCurrentPag((prevState) => prevState + 1); \r\n          })\r\n          .finally(() => setFetchin(false));\r\n      }\r\n      setItemsid(movi)\r\n    }, [fetchin]);\r\n    \r\n\r\n  const scrollHandler = (e) => {\r\n    if (\r\n      e.target.documentElement.scrollHeight -\r\n        (e.target.documentElement.scrollTop + window.innerHeight) <\r\n      2000\r\n    ) {\r\n      setFetchin(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('scroll', scrollHandler);\r\n    return function () {\r\n      document.removeEventListener('scroll', scrollHandler);\r\n    };\r\n  }, []);\r\n\r\n  \r\n\r\n    // useEffect(() => {\r\n    //     const getItems = async () =>{\r\n    //         setLoading(true)\r\n    //         const response = await axios.get(`${IMDb}`)\r\n    //         console.log(response.data);\r\n    //         setItem(response.data.items)\r\n    //         setLoading(false)\r\n           \r\n    //     }\r\n\r\n    //     getItems()\r\n    // },[])\r\n\r\n    \r\n   \r\n    // const lastItemIndex = currentPage * itemPerPage\r\n    // const firstItemIndex = lastItemIndex - itemPerPage\r\n    // const currentItem = item.slice(firstItemIndex, lastItemIndex )\r\n\r\n    // const paginate = pageNumber => setCurrentPage(pageNumber)\r\n    return (\r\n        <main className=\"films\">\r\n            <div className=\"films__inner\">\r\n            {\r\n            loadin === true ? \r\n                <h1>Загрузка</h1>\r\n               :\r\n            getValues ? \r\n                getSearchs.map((item, id) => (\r\n                  <FilmsItem item={item} key={id}/>\r\n                  ))\r\n                :\r\n                movi.map((item, id) => (\r\n                  <FilmsItem item={item} key={id}/>\r\n                  ))\r\n            }\r\n                {/* <Pagination\r\n                 itemPerPage={itemPerPage}\r\n                 totalItems={item.length}\r\n                 paginate={paginate}\r\n                 /> */}\r\n            </div>\r\n        </main>\r\n               \r\n               \r\n    )\r\n}\r\n\r\nexport default Films\r\n"]},"metadata":{},"sourceType":"module"}